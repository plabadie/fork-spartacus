on:
  # push:
  #   branches:
  #     - develop
  #     - release/**
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
    # empty as it is used only to manually trigger the workflow
  
env:
  CYPRESS_KEY: ${{ secrets.CYPRESS_KEY }}
  NODE_VERSION: '16'

concurrency: 
  group: ci-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

name: Continuous Integration
jobs:
  no_retries: 
    name: Verify re-run of all jobs
    runs-on: ubuntu-latest
    steps:
      - name: Forcefully fail build if jobs are all retried
        uses: actions/github-script@v5
        with:
          script: |
            core.setFailed('Please push a commit to trigger the build. To push an empty commit you can use `git commit --allow-empty -m "Trigger Build"`') 
        if: ${{ github.run_attempt > 1 }}
  unit_tests_core:
    needs: no_retries
    name: Unit tests for core Spartacus libs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: | 
            node_modules
            projects/storefrontapp-e2e-cypress/node_modules
            ~/.cache/Cypress
          key: nodemodules-${{ github.event.pull_request.base.sha }}
          restore-keys: nodemodules-${{ github.event.pull_request.base.sha }}
      - name: Install angular CLI
        run: npm install -g @angular/cli@14
      - name: Package installation
        run: yarn --frozen-lockfile
      - name: Run unit tests for Spartacus libs
        run: |
          ci-scripts/unit-tests-core-lib.sh
  unit_tests_libs:
    needs: no_retries
    name: Unit tests for integration libs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: | 
            node_modules
            projects/storefrontapp-e2e-cypress/node_modules
            ~/.cache/Cypress
          key: nodemodules-${{ github.event.pull_request.base.sha }}
          restore-keys: nodemodules-${{ github.event.pull_request.base.sha }}
      - name: Install angular CLI
        run: npm install -g @angular/cli@14
      - name: Package installation
        run: yarn --frozen-lockfile
      - name: Run unit tests for integration libs
        run: |
          ci-scripts/unit-tests.sh
  sonarqube_scan:
    needs: no_retries
    name: SonarQube Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        with:
          args: >
            -Dsonar.qualitygate.wait=true
            -Dsonar.projectKey=composable-storefront
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonar.tools.sap
    if: ${{ false }}
  linting:
    needs: no_retries
    name: Validations and static code checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: | 
            node_modules
            projects/storefrontapp-e2e-cypress/node_modules
            ~/.cache/Cypress
          key: nodemodules-${{ github.event.pull_request.base.sha }}
          restore-keys: nodemodules-${{ github.event.pull_request.base.sha }}
      - name: Install angular CLI
        run: npm install -g @angular/cli@14
      - name: Package installation
        run: yarn --frozen-lockfile
      - name: Run linting validation
        run: |
          ci-scripts/validate-lint.sh
  build_conclusion:
    needs: [no_retries, unit_tests_core, unit_tests_libs, linting, sonarqube_scan]
    name: Continuous Integration Conclusion
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Required build failed
        uses: actions/github-script@v5
        with:
          script: |
            core.setFailed('Build failed')
        if: |
          needs.no_retries.result == 'failure' || needs.no_retries.result == 'cancelled' ||
          needs.unit_tests_core.result == 'failure' || needs.unit_tests_core.result == 'cancelled' ||
          needs.unit_tests_libs.result == 'failure' || needs.unit_tests_libs.result == 'cancelled' ||
          needs.sonarqube_scan.result == 'failure' || needs.sonarqube_scan.result == 'cancelled' ||
          needs.linting.result == 'failure' || needs.linting.result == 'cancelled'